Checks: >
  -*,
  bugprone-*,
  google-*,
  misc-*,
  performance-*,
  portability-*,
  readability-*,
  -google-readability-braces-around-statements,
  -google-readability-namespace-comments,
  -google-runtime-references,
  -misc-non-private-member-variables-in-classes,
  -modernize-return-braced-init-list,
  -performance-move-const-arg,
  -readability-named-parameter,
  -modernize-use-trailing-return-type,
  -readability-braces-around-statements,
  -readability-redundant-declaration,

  -modernize-*,
  -readability-identifier-length,
  -readability-isolate-declaration,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  -performance-avoid-endl,
  -misc-include-cleaner,
  -performance-enum-size,
  -readability-magic-numbers,
  -google-explicit-constructor
# diff
# -misc-const-correctness,
# -performance-move-const-arg,
# -readability-named-parameter,
# -readability-avoid-return-with-void-value,
# -readability-function-cognitive-complexity,
# -bugprone-narrowing-conversions,
# -bugprone-inc-dec-in-conditions,
# -bugprone-implicit-widening-of-multiplication-result,
# -bugprone-unchecked-optional-access,
# -bugprone-unused-local-non-trivial-variable,
# -bugprone-unused-return-value

# Turn all the warnings from the checks above into errors.
WarningsAsErrors: "*"

# TODO(#205) - Enable clang-tidy checks in our headers.
#    HeaderFilterRegex: "google/cloud/.*"

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - {
      key: readability-identifier-naming.TemplateParameterCase,
      value: CamelCase,
    }
  - { key: readability-identifier-naming.FunctionCase, value: aNy_CasE }
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-identifier-naming.ClassMemberCase, value: lower_case }
  - { key: readability-identifier-naming.ClassMemberSuffix, value: _ }
  - { key: readability-identifier-naming.PrivateMemberSuffix, value: _ }
  - { key: readability-identifier-naming.ProtectedMemberSuffix, value: _ }
  - {
      key: readability-identifier-naming.MacroDefinitionCase,
      value: UPPER_CASE,
    }
  - { key: readability-identifier-naming.EnumConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantPrefix, value: k }
  - {
      key: readability-identifier-naming.ConstexprVariableCase,
      value: CamelCase,
    }
  - { key: readability-identifier-naming.ConstexprVariablePrefix, value: k }
  - { key: readability-identifier-naming.GlobalConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix, value: k }
  - { key: readability-identifier-naming.MemberConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.MemberConstantPrefix, value: k }
  - { key: readability-identifier-naming.StaticConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.StaticConstantPrefix, value: k }
  - {
      key: readability-implicit-bool-conversion.AllowIntegerConditions,
      value: 1,
    }
  - {
      key: readability-implicit-bool-conversion.AllowPointerConditions,
      value: 1,
    }
